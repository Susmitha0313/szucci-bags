<%- include("../partials/adminHeader.ejs") %>
    <style>
        .thumbnails-container {
            display: flex;
            flex-wrap: wrap;
        }

        .thumbnail {
            margin: 5px;
            width: 100px;
            height: 100px;
            object-fit: cover;
        }
    </style>

    <body class="dark">
        <div class="screen-overlay"></div>
        <aside class="navbar-aside" id="offcanvas_aside">
            <div class="aside-top">
                <a href="/admin" class="brand-wrap">
                    <img src="/assets/adminAssets/imgs/icons/logo.png" class="logo" alt="Evara Dashboard">
                </a>
                <div>
                    <button class="btn btn-icon btn-aside-minimize"> <i
                            class="text-muted material-icons md-menu_open"></i> </button>
                </div>
            </div>
            <nav>
                <ul class="menu-aside">
                    <li class="menu-item active">
                        <a class="menu-link active" href="/admin/adminHome"> <i class="icon material-icons md-home"></i>
                            <span class="text">Dashboard</span>
                        </a>
                    </li>

                    <li class="menu-item">
                        <a class="menu-link" href="/admin/salesreport"> <i
                                class="icon material-icons md-show_chart"></i>
                            <span class="text">Sales Report</span>
                        </a>
                    </li>
                    <li class="menu-item">
                        <a class="menu-link" href="/admin/ordersList"> <i class="icon material-icons md-list_alt"></i>
                            <span class="text">Orders</span>
                        </a>
                    </li>

                    <li class="menu-item ">
                        <a class="menu-link" href="/admin/userList"> <i class="icon material-icons md-people"></i>
                            <span class="text">Users</span>
                        </a>
                    </li>

                    <li class="menu-item active">
                        <a class="menu-link active" href="/admin/products"> <i
                                class="icon material-icons md-local_offer"></i>
                            <span class="text">Products</span>
                        </a>
                    </li>

                    <li class="menu-item ">
                        <a class="menu-link" href="/admin/brand"> <i class="icon material-icons md-label"></i>
                            <span class="text">Brand</span>
                        </a>
                    </li>

                    <li class="menu-item">
                        <a class="menu-link" href="/admin/category"> <i class="icon material-icons md-category"></i>
                            <span class="text">Category</span>
                        </a>
                    </li>

                    <li class="menu-item ">
                        <a class="menu-link" href="/admin/couponPage"> <i
                                class="icon material-icons md-confirmation_number"></i>
                            <span class="text">Coupon</span>
                        </a>
                    </li>

                    <li class="menu-item has-submenu">
                        <a class="menu-link" > <i class="icon material-icons md-redeem"></i>
                            <span class="text">Offers</span>
                        </a>
                        <div class="submenu">
                            <a href="/admin/prodOfferPage">Product Offer</a>
                            <a href="/admin/catOfferPage">Category Offer</a>
                        </div>
                    </li>


                    <br>
                    <br>
            </nav>
        </aside>
        <main class="main-wrap">
            <header class="main-header navbar">
                <div class="col-search">
                    <form class="searchform">
                        <div class="input-group">
                            <input list="search_terms" type="text" class="form-control" placeholder="Search term">
                            <button class="btn btn-light bg" type="button"> <i
                                    class="material-icons md-search"></i></button>
                        </div>
                        <datalist id="search_terms">
                            <option value="Products">
                            <option value="New orders">
                            <option value="Apple iphone">
                            <option value="Ahmed Hassan">
                        </datalist>
                    </form>
                </div>
                <div class="col-nav">
                    <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i
                            class="material-icons md-apps"></i> </button>
                    <ul class="nav">
                        <li class="nav-item">
                            <a class="nav-link btn-icon" href="#">
                                <i class="material-icons md-notifications animation-shake"></i>
                                <span class="badge rounded-pill">3</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link btn-icon darkmode" href="#"> <i
                                    class="material-icons md-nights_stay"></i> </a>
                        </li>

                        <li class="dropdown nav-item">
                            <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownAccount"
                                aria-expanded="false"> <img class="img-xs rounded-circle"
                                    src="/assets/adminAssets/imgs/people/testi-7.png" alt="User"></a>
                            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                                <a class="dropdown-item" href="#"><i class="material-icons md-perm_identity"></i>Edit
                                    Profile</a>
                                <a class="dropdown-item" href="#"><i class="material-icons md-settings"></i>Account
                                    Settings</a>

                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item text-danger" href="/admin/logout"><i
                                        class="material-icons md-exit_to_app"></i>Logout</a>
                            </div>
                        </li>
                    </ul>
                </div>
            </header>
            <section class="content-main">
                <div class="row">
                    <div class="col-12">
                        <div class="content-header">
                            <h2 class="content-title">Add New Product</h2>

                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="card mb-4">
                            <div class="card-header">
                                <h4>Basic</h4>
                            </div>
                            <div class="card-body">
                                <form id="productAddForm" action="/admin/productAdd" method="post"
                                    enctype="multipart/form-data">
                                    <div class="mb-4">
                                        <label for="product_name" class="form-label">Product title</label>
                                        <input id="product_name" name="productTitle" type="text" placeholder="Type here"
                                            class="form-control">
                                        <p>
                                        <div id="nameError" class=" text-danger"></div>
                                        </p>
                                    </div>

                                    <div class="mb-4">
                                        <label for="productDescription" class="form-label">Description</label>
                                        <input id="productDescription" name="description" placeholder="Type here"
                                            type="text" class="form-control" rows="4"></input>
                                        <p>
                                        <div id="descriptionError" class=" text-danger"></div>
                                        </p>
                                    </div>


                                    <div class="row">
                                        <div class="col-lg-4">
                                            <div class="mb-4">

                                                <div class="row gx-2">
                                                    <label for="regPrice" class="form-label">Regular price</label>
                                                    <input id="regPrice" placeholder="₹" name="regPrice" type="text"
                                                        class="form-control">
                                                    <p>
                                                    <div id="regularError" class=" text-danger"></div>
                                                    </p>
                                                </div>

                                            </div>
                                        </div>
                                        <div class="col-lg-4">
                                            <div class="mb-4">
                                                <label for="offerPrice" class="form-label">Offer price</label>
                                                <input id="offerPrice" placeholder="₹" name="OfferPrice" type="text"
                                                    class="form-control">
                                                <p>
                                                <div id="offerPriceError" class=" text-danger"></div>
                                                </p>
                                            </div>
                                        </div>


                                        <div class="mb-4">
                                            <label for="product_stock" class="form-label">Stock</label>
                                            <input id="product_stock" name="stock" placeholder="Type here" type="text"
                                                class="form-control"></input>
                                            <p>
                                            <div id="stockError" class=" text-danger"></div>
                                            </p>
                                        </div>



                                    </div>
                                    <!-- </div> -->

                                    <div class="col-lg-12">

                                        <div class="card-body">
                                            <div class="card mb-6">
                                                <div class="card-header">
                                                    <h4>Choose images</h4>
                                                </div>
                                                <div class="border row">
                                                    <div id="addedImagesContainer" class="thumbnails-container"></div>
                                                </div>
                                                <div class="card-body">
                                                    <div class="input-upload">
                                                        <input class="form-control border" name="images" id="imageInput"
                                                            type="file" multiple>
                                                    </div>
                                                    <p>
                                                    <div id="images-error" class=" text-danger"></div>
                                                    </p>

                                                </div>

                                            </div> <!-- card end// -->


                                            <div class="card mb-4">
                                                <div class="card-header">
                                                    <h4>Organization</h4>
                                                </div>
                                                <div class="card-body">
                                                    <div class="row gx-2">
                                                        <div class="col-sm-6 mb-3">
                                                            <label class="form-label">Category</label>
                                                            <select name="category" class="form-select">
                                                                <% if(locals.catData){ %>
                                                                    <% catData.forEach(element=>{ %>
                                                                        <option value="<%= element._id %>">
                                                                            <%= element.name %>
                                                                        </option>
                                                                        <% }) %>
                                                                            <% } %>
                                                            </select>
                                                        </div>
                                                        <div class="col-sm-6 mb-3">
                                                            <label class="form-label">Brand</label>
                                                            <select name="brand" class="form-select">
                                                                <% if(locals.brandData){ %>
                                                                    <% brandData.forEach(element=>{ %>
                                                                        <option value="<%= element._id %>">
                                                                            <%= element.brandName %>
                                                                        </option>
                                                                        <% }) %>
                                                                            <% } %>
                                                            </select>
                                                        </div>


                                                    </div> <!-- row.// -->
                                                </div>
                                            </div> <!-- card end// -->
                                        </div>
                                    </div>

                                    <!-- </div>  -->
                                    <button type="submit" class="btn btn-md rounded font-sm hover-up"> Save Product
                                    </button>

                                </form>
                            </div>
                            <p>
                            <div id="stockError" class=" text-danger"></div>
                            </p>

                        </div>
            </section>


            <script>
                document.getElementById('imageInput').addEventListener('change', function (event) {
                    const container = document.getElementById('addedImagesContainer');
                    container.innerHTML = '';

                    const files = event.target.files;
                    for (let i = 0; i < files.length; i++) {
                        const file = files[i];
                        if (file.type.startsWith('image/')) {
                            const reader = new FileReader();
                            reader.onload = function () {
                                const img = document.createElement('img');
                                img.src = reader.result;
                                img.classList.add('thumbnail');
                                container.appendChild(img);
                            };
                            reader.readAsDataURL(file);
                        }
                    }
                });



                document.addEventListener("DOMContentLoaded", function () {
                    const productAddForm = document.getElementById("productAddForm");

                    function nameValidation() {
                        const productName = document.getElementById("product_name").value;
                        const nameError = document.getElementById("nameError");
                        // Validation logic for product name
                        if (productName.trim() === "") {
                            nameError.innerHTML = "Please enter valid name"
                            return false
                        } else if (productName.length <= 5) {
                            nameError.innerHTML = "Name must need atleast 5 character"
                            return false
                        } else if (productName.length >= 30) {
                            nameError.innerHTML = "Name can't exceed 30 character"
                            return false
                        } else if ((!/^[A-Za-z\s]+$/.test(productName))) {
                            nameError.innerHTML = "Name can't contain characters other than alphabets, underscore and &"
                            return false
                        }
                        nameError.innerHTML = "";
                        return true
                    }

                    function desValidation() {
                        const description = document.getElementById("productDescription").value;
                        const descriptionError = document.getElementById("descriptionError");
                        // Validation logic for description
                        if (description.trim() === "") {
                            descriptionError.innerHTML = "Please enter valid description"
                            return false
                        } else if (description.length <= 10) {
                            descriptionError.innerHTML = "Description must need more than 10 character"
                            return false
                        } else if (description.length >= 500) {
                            descriptionError.innerHTML = "Description can't exceed 500 character"
                            return false
                        }
                        descriptionError.innerHTML = "";
                        return true
                    }

                    function regValidation() {
                        const regular = document.getElementById("regPrice").value;
                        const regularError = document.getElementById("regularError");
                        // Validation logic for regular price
                        if (regular.trim() === "") {
                            regularError.innerHTML = "Please enter valid amount"
                            return false
                        } else if (/^\d+$/.test(regular)) {
                            const regNumber = parseInt(regular);
                            if (regNumber < 100) {
                                regularError.innerHTML = "Regular price need more than 100 amount"
                                return false
                            } else if (regNumber > 100000) {
                                regularError.innerHTML = "Regular price can't accept more than 1,00,000 amount"
                                return false
                            }
                        } else {
                            regularError.innerHTML = "Price can't contain characters other numbers"
                            return false
                        }
                        regularError.innerHTML = "";
                        return true
                    }

                    function offerValidation() {
                        const regular = document.getElementById("regPrice").value;
                        const offerPrice = document.getElementById("offerPrice").value;
                        const offerPriceError = document.getElementById("offerPriceError");
                        // Validation logic for offer price
                        if (offerPrice.trim() === "") {
                            offerPriceError.innerHTML = "Please enter valid amount"
                            return false
                        } else if (/^\d+$/.test(offerPrice)) {
                            const offerNumber = parseInt(offerPrice);
                            const regNumber = parseInt(regular);
                            if (offerNumber > regNumber) {
                                offerPriceError.innerHTML = "Offer price cannot exceed regular price"
                                return false
                            } else if (offerNumber > 100000) {
                                offerPriceError.innerHTML = "Offer price can't accept more than 1,00,000 amount"
                                return false
                            } else if (offerNumber < 100) {
                                offerPriceError.innerHTML = "Regular price need more than 100 amount"
                                return false
                            }
                        } else {
                            offerPriceError.innerHTML = "Price can't contain characters other numbers"
                            return false
                        }
                        offerPriceError.innerHTML = "";
                        return true
                    }



                    function stockValidation() {
                        const stock = document.getElementById("product_stock").value;
                        const stockError = document.getElementById("stockError");
                        // Validation logic for product stock
                        if (stock.trim() === "") {
                            stockError.innerHTML = "Please enter valid product stock";
                            return false;
                        } else if (/^\d+$/.test(stock)) {
                            const stockNumber = parseInt(stock);
                            if (stockNumber < 1) {
                                stockError.innerHTML = "Product needs minimum 1 stock";
                                return false;
                            } else {
                                stockError.innerHTML = ""; // Clear the error message here
                                return true; // Return true for valid input
                            }
                        } else {
                            stockError.innerHTML = "Stock amount can't contain characters other than numbers";
                            return false;
                        }
                    }

                    function imageValidation() {
                        const selectImages = document.getElementById("imageInput").files;
                        const imageError = document.getElementById("images-error");
                        // Validation logic for images

                        if (selectImages.length !== 5) {
                            imageError.innerHTML = "Images must need exactly 5 images";
                            return false;
                        }
                        imageError.innerHTML = "";
                        return true;
                    }

                    // Attach event listeners for form submission
                    productAddForm.addEventListener("submit", function (e) {
                        // Validate all fields on form submission
                        nameValidation();
                        desValidation();
                        regValidation();
                        offerValidation();
                        stockValidation();
                        imageValidation();

                        // Prevent form submission if there are validation errors
                        if (/* Any validation error condition */
                            nameError.innerHTML ||
                            descriptionError.innerHTML ||
                            regularError.innerHTML ||
                            offerPriceError.innerHTML ||
                            stockError.innerHTML ||
                            imageError.innerHTML) {
                            e.preventDefault();
                        }
                    });

                    // Attach blur event listeners for individual form fields
                    document.getElementById("product_name").addEventListener("blur", nameValidation);
                    document.getElementById("productDescription").addEventListener("blur", desValidation);
                    document.getElementById("regPrice").addEventListener("blur", regValidation);
                    document.getElementById("offerPrice").addEventListener("blur", offerValidation);
                    document.getElementById("product_stock").addEventListener("blur", stockValidation);
                    document.getElementById("imageInput").addEventListener("blur", imageValidation);
                });

            </script>

            <%- include("../partials/adminFooter.ejs") %>