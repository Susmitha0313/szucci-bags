
<%- include("../partials/adminHeader.ejs") %>
<style>
     .thumbnails-container {
            display: flex;
            flex-wrap: wrap;
        }
        .thumbnail {
            margin: 5px;
            width: 100px;
            height: 100px;
            object-fit: cover;
        }
</style>

<body class="dark">
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="/admin" class="brand-wrap">
                <img src="/assets/adminAssets/imgs/icons/logo.png" class="logo" alt="Evara Dashboard">
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i> </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item ">
                    <a class="menu-link" href="/admin/adminHome"> <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <li class="menu-item "> 
                    <a class="menu-link" href="/admin/ordersList"> <i class="icon material-icons md-home"></i>
                        <span class="text">Orders</span>
                    </a>
                </li>
                <li class="menu-item active">
                    <a class="menu-link " href="/admin/products"> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Products</span>
                    </a>
                   
                </li>

                <li class="menu-item ">
                    <a class="menu-link" href="/admin/userList"> <i class="icon material-icons md-people"></i>
                        <span class="text">Users</span>
                    </a>
                </li>
                
               
                <li class="menu-item ">
                    <a class="menu-link" href="/admin/brand"> <i class="icon material-icons md-person"></i>
                        <span class="text">Brand</span>
                    </a>
                </li>
                
                <li class="menu-item">
                    <a class="menu-link" href="/admin/category"> <i class="icon material-icons md-category"></i>
                        <span class="text">Category</span>
                    </a>
                </li>
                
            <br>
            <br>
        </nav>
    </aside>
    <main class="main-wrap">
        <header class="main-header navbar">
            <div class="col-search">
                <form class="searchform">
                    <div class="input-group">
                        <input list="search_terms" type="text" class="form-control" placeholder="Search term">
                        <button class="btn btn-light bg" type="button"> <i class="material-icons md-search"></i></button>
                    </div>
                    <datalist id="search_terms">
                        <option value="Products">
                        <option value="New orders">
                        <option value="Apple iphone">
                        <option value="Ahmed Hassan">
                    </datalist>
                </form>
            </div>
            <div class="col-nav">
                <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i class="material-icons md-apps"></i> </button>
                <ul class="nav">
                    <li class="nav-item">
                        <a class="nav-link btn-icon" href="#">
                            <i class="material-icons md-notifications animation-shake"></i>
                            <span class="badge rounded-pill">3</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link btn-icon darkmode" href="#"> <i class="material-icons md-nights_stay"></i> </a>
                    </li>
                  
                    <li class="dropdown nav-item">
                        <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownAccount" aria-expanded="false"> <img class="img-xs rounded-circle" src="/assets/adminAssets/imgs/people/testi-7.png" alt="User"></a>
                        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                            <a class="dropdown-item" href="#"><i class="material-icons md-perm_identity"></i>Edit Profile</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-settings"></i>Account Settings</a>

                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item text-danger" href="/admin/logout"><i class="material-icons md-exit_to_app"></i>Logout</a>
                        </div>
                    </li>
                </ul>
            </div>
        </header>
        <section class="content-main">
            <div class="row">
                <div class="col-12">
                    <div class="content-header">
                        <h 2 class="content-title">Edit Product</h2>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h4>Basic</h4>
                        </div>
                        <div class="card-body">
                            <form id="productAddForm" action="/admin/productEdit/<%= product._id %>" method="post" enctype="multipart/form-data">
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">Name</label>
                                    <input id="product_name" name="productTitle" type="text" value="<%= product.productName %>" placeholder="Type here" class="form-control">
                                    <div id="nameError" class="text-danger"></div>
                                </div>
                                <div class="mb-4">
                                    <label for="productDescription" class="form-label">Description</label>
                                    <input id="productDescription" name="description" placeholder="Type here" type="text" value="<%= product.description %>" class="form-control" rows="4"></input>
                                    <div id="descriptionError" class="text-danger"></div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label for="regPrice" class="form-label">Regular price</label>
                                            <input id="regPrice" placeholder="₹" name="regPrice" type="text" value="<%= product.regularPrice %>" class="form-control">
                                            <div id="regularError" class="text-danger"></div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label for="offerPrice" class="form-label">Offer price</label>
                                            <input id="offerPrice" placeholder="₹" name="OfferPrice" type="text" value="<%= product.salePrice %>" class="form-control">
                                            <div id="offerPriceError" class="text-danger"></div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label for="product_stock" class="form-label">Stock</label>
                                            <input id="product_stock" name="stock" placeholder="Type here" type="text" value="<%= product.quantity %>" class="form-control">
                                            <div id="stockError" class="text-danger"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card mb-4">
                                    <div class="card-header">
                                        <h4>Choose images</h4>
                                    </div>
                                    <!-- <div class="card-body">
                                        <div class="input-upload">
                                            <input class="form-control border" name="images" id="imageInput" type="file" multiple value=" <%= product.productImage.length %> ">
                                        </div>  
                                        <p><div id="images-error" class="text-danger"></div></p>
                                        <div class="border row">
                                            <div id="addedImagesContainer" class="thumbnails-container">
                                                <% for(let i=0; i<product.productImage.length; i++) { %>
                                                    <img src="/assets/adminAssets/imgUploads/<%= product.productImage[i] %>" class="img-sm , thumbnail" alt="Product">
                                                <% } %>
                                            </div>
                                        </div>
                                    </div> -->
                                    <% for (let i=0; i < product.productImage.length; i++) { %>
                                        <div class="col-md-12">
                                            <div class="mb-4">
                                                <div class="col-12">
                                                    <td> 
                                                        <input type="hidden" value="<%= product.productImage[i] %>" id="imageDatas">
                                                        <img class="rounded" style="width: 50px; height: 60px;"
                                                        src="/assets/adminAssets/imgUploads/<%= product.productImage[i] %>"
                                                            alt="image">
                                                        <i onclick="deleteSingleImage('<%= product.productImage[i] %>','<%= product._id %>')" style="position: absolute; margin-left: .5rem; cursor: pointer;" class="text-muted material-icons">close</i>
                                                    </td>
                                                </div>
                                                
                                            </div>
                                        </div> <!-- col.// -->
                                
                                        <% } %>
                                </div>
                                <div class="card mb-4">
                                    <div class="card-header">
                                        <h4>Organization</h4>
                                    </div>
                                    <div class="card-body">
                                        <div class="row gx-2">
                                            <div class="col-sm-6 mb-3">
                                                <label class="form-label">Category</label>
                                                <select name="category" class="form-select">
                                                    <% if (locals.catData) { %>
                                                        <% catData.forEach(element => { %>
                                                            <option value="<%= element._id %>" <%= product.category.toString() === element._id.toString() ? 'selected' : '' %>><%= element.name %></option>
                                                        <% }) %>
                                                    <% } %>
                                                </select>
                                            </div>
                                            <div class="col-sm-6 mb-3">
                                                <label class="form-label">Brand</label>
                                                <select name="brand" class="form-select">
                                                    <% if (locals.brandData) { %>
                                                        <% brandData.forEach(element => { %>
                                                            <option value="<%= element._id %>" <%= product.brand.toString() === element._id.toString() ? 'selected' : '' %>><%= element.brandName %></option>
                                                        <% }) %>
                                                    <% } %>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-md rounded font-sm hover-up">Save Product</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
               
        </section>


<script>



function deleteSingleImage(imageid,productId) {
            console.log(imageid,"imageId",productId,"productId");
    // Make an AJAX request to delete the image using the /deletesingleimage API
    $.ajax({
        url:'/admin/deleteImage',
        method: 'post',
        data: { imageNameTOserver:imageid,productIdToServer:productId }, // Replace 'YOUR_PRODUCT_ID' with the actual product ID
        success:((response)=>{
            console.log(response);
            if(response.status === true){
                window.location.reload()
            }
        })
    });
}



     document.getElementById('imageInput').addEventListener('change', function(event) {
            const container = document.getElementById('addedImagesContainer');
            container.innerHTML = ''; // Clear previous images

            const files = event.target.files;
            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = function() {
                        const img = document.createElement('img');
                        img.src = reader.result;
                        img.classList.add('thumbnail');
                        container.appendChild(img);
                    };
                    reader.readAsDataURL(file);
                }
            }
        });



    document.addEventListener("DOMContentLoaded", function () {
    const productAddForm = document.getElementById("productAddForm");

    function nameValidation() {
        const productName = document.getElementById("product_name").value;
        console.log(productName)
        const nameError = document.getElementById("nameError");
        // Validation logic for product name
        if (productName.trim() === ""){
                nameError.innerHTML = "Please enter valid name"
                return false
            } else if (productName.length <= 3) {
                nameError.innerHTML = "Name must need atleast 3 character"
                return false
            } else if (productName.length >= 20) {
                nameError.innerHTML = "Name can't exceed 20 character"
                return false
            } else if ((!/^[A-Za-z\s]+$/.test(productName))) {
                nameError.innerHTML = "Name can't contain characters other than alphabets, underscore and &"
                return false
            }
            nameError.innerHTML = "";
            return true
    }

    function desValidation() {
        const description = document.getElementById("productDescription").value;
        const descriptionError = document.getElementById("descriptionError");
        // Validation logic for description
        if (description.trim() === "") {
                descriptionError.innerHTML = "Please enter valid description"
                return false
            } else if (description.length <= 10) {
                descriptionError.innerHTML = "Description must need more than 10 character"
                return false
            } else if (description.length >= 500) {
                descriptionError.innerHTML = "Description can't exceed 500 character"
                return false
            }
            descriptionError.innerHTML = "";
            return true
    }

    function regValidation() {
        const regular = document.getElementById("regPrice").value;
        const regularError = document.getElementById("regularError");
        console.log("regular price:", regular);
        // Validation logic for regular price
        if (regular.trim() === "") {
                regularError.innerHTML = "Please enter valid amount"
                return false
            } else if (/^\d+$/.test(regular)) {
                const regNumber = parseInt(regular);
                if (regNumber < 100) {
                    regularError.innerHTML = "Regular price need more than 100 amount"
                    return false
                } else if (regNumber >  100000) {
                    regularError.innerHTML = "Regular price can't accept more than 1,00,000 amount"
                    return false
                }
            } else {
                regularError.innerHTML = "Price can't contain characters other numbers"
                return false
            }
            regularError.innerHTML = "";
            return true
    }

    function offerValidation() {
         const regular = document.getElementById("regPrice").value;
        const offerPrice = document.getElementById("offerPrice").value;
        const offerPriceError = document.getElementById("offerPriceError");
        console.log("Offer price:", offerPrice);

        // Validation logic for offer price
        if (offerPrice.trim() === "") {
                offerPriceError.innerHTML = "Please enter valid amount"
                return false
            } else if (/^\d+$/.test(offerPrice)) {
                const offerNumber = parseInt(offerPrice);
                const regNumber = parseInt(regular);
                if (offerNumber > regNumber) {
                    offerPriceError.innerHTML = "Offer price cannot exceed regular price"
                    return false
                } else if (offerNumber > 100000 ) {
                    offerPriceError.innerHTML = "Offer price can't accept more than 1,00,000 amount"
                    return false
                } else if (offerNumber < 100) {
                    regularError.innerHTML = "Regular price need more than 100 amount"
                    return false
                }
            } else {
                offerPriceError.innerHTML = "Price can't contain characters other numbers"
                return false
            }
            offerPriceError.innerHTML = "";
            return true
    }

     

    function stockValidation() {
        const stock = document.getElementById("product_stock").value;
        const stockError = document.getElementById("stockError");
        // Validation logic for product stock
        if (stock.trim() === "") {
                stockError.innerHTML = "Please enter valid product stock";
                return false;
            } else if (/^\d+$/.test(stock)) {
                const stockNumber = parseInt(stock);
                if (stockNumber < 1) {
                    stockError.innerHTML = "Product needs minimum 1 stock";
                    return false;
                } else {
                    stockError.innerHTML = ""; // Clear the error message here
                    return true; // Return true for valid input
                }
            } else {
                stockError.innerHTML = "Stock amount can't contain characters other than numbers";
                return false;
            }
    }

    function imageValidation() {
        const selectImages = document.getElementById("imageInput").files;
        const imageError = document.getElementById("images-error");
        // Validation logic for images

            if (selectImages.length !== 3) {
                imageError.innerHTML = "Images must need exactly 3 images";
                return false;
            }
            imageError.innerHTML = "";
            return true;
    }

    // Attach event listeners for form submission
    productAddForm.addEventListener("submit", function (e) {
        // Validate all fields on form submission
        nameValidation();
        desValidation();
        regValidation();
        offerValidation();
        stockValidation();
        imageValidation();

        // Prevent form submission if there are validation errors
        if (/* Any validation error condition */
        nameError.innerHTML ||
        descriptionError.innerHTML ||
        regularError.innerHTML ||
        offerPriceError.innerHTML ||
        stockError.innerHTML ||
        imageError.innerHTML) {
            e.preventDefault();
        }
    });

    // Attach blur event listeners for individual form fields
    document.getElementById("product_name").addEventListener("blur", nameValidation);
    document.getElementById("productDescription").addEventListener("blur", desValidation);
    document.getElementById("regPrice").addEventListener("blur", regValidation);
    document.getElementById("offerPrice").addEventListener("blur", offerValidation);
    document.getElementById("product_stock").addEventListener("blur", stockValidation);
    document.getElementById("imageInput").addEventListener("blur", imageValidation);
    });

</script>

<%- include("../partials/adminFooter.ejs") %>